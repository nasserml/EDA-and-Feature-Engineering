# -*- coding: utf-8 -*-
"""03-Fligh Prediction EDA and Feature Engineering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bTkv4sBntRYt_FbHkD23BZwYHPFsrxEl

## Flight Price Prediction(EDA + Feature Engineering)
"""

## Dataset: https://github.com/krishnaik06/5-Days-Live-EDA-and-Feature-Engineering/tree/main/Flight%20Prediction

# Commented out IPython magic to ensure Python compatibility.
#importing basics libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

train_df=pd.read_excel('Data_Train.xlsx')
train_df.head()

test_df=pd.read_excel('Test_set.xlsx')
test_df.head()

final_df=train_df.append(test_df)
final_df.head()

final_df.tail()

final_df.info()

final_df['Date_of_Journey'].str.split('/').str[0]

final_df['Date_of_Journey'].str.split('/').str[1]

final_df['Date_of_Journey'].str.split('/').str[2]

##Fetaure Engineering Process
final_df['Date']=final_df['Date_of_Journey'].str.split('/').str[0]
final_df['Month']=final_df['Date_of_Journey'].str.split('/').str[1]
final_df['Year']=final_df['Date_of_Journey'].str.split('/').str[2]

final_df.head(2)

#df["Date"]=df['Date_of_Journey'].apply(lambda x:x.split("/")[0])
#df["Month"]=df['Date_of_Journey'].apply(lambda x:x.split("/")[1])
#df["Year"]=df['Date_of_Journey'].apply(lambda x:x.split("/")[2])

final_df['Date']=final_df['Date'].astype(int)
final_df['Month']=final_df['Month'].astype(int)
final_df['Year']=final_df['Year'].astype(int)

final_df.info()

final_df.drop('Date_of_Journey',axis=1,inplace=True)

final_df.head(10)

final_df['Arrival_Time'].str.split(' ').str[0]

final_df['Arrival_Time']=final_df['Arrival_Time'].apply(lambda x : x.split(' ')[0])

final_df.isnull().sum()

final_df.shape

final_df['Arrival_hour']=final_df['Arrival_Time'].str.split(':').str[0]
final_df['Arrival_min']=final_df['Arrival_Time'].str.split(':').str[1]

final_df.head(1)

final_df['Arrival_hour']=final_df['Arrival_hour'].astype(int)
final_df['Arrival_min']=final_df['Arrival_min'].astype(int)

final_df.drop('Arrival_Time',axis=1,inplace=True)

final_df.head(5)

final_df.info()

final_df['Dept_hour']=final_df['Dep_Time'].str.split(':').str[0]
final_df['Dept_min']=final_df['Dep_Time'].str.split(':').str[1]
final_df['Dept_hour']=final_df['Dept_hour'].astype(int)
final_df['Dept_min']=final_df['Dept_min'].astype(int)
final_df.drop('Dep_Time',axis=1,inplace=True)

final_df.info()

final_df['Total_Stops'].isnull().sum()

final_df['Total_Stops'].unique()

#

final_df[final_df['Total_Stops'].isnull()]

final_df['Total_Stops']=final_df['Total_Stops'].map({'non-stop':0,'1 stop':1,'2 stops':2,'3 stops':3,'4 stops':4,'nan':1})

final_df.head()

final_df.drop('Route',axis=1,inplace=True)

final_df.head()

final_df.info()

final_df['Additional_Info'].unique()

final_df.info()

final_df['Duration'].str.split(' ').str[0]

final_df['Duration'].str.split(' ').str[0].str.split('h').str[0]

final_df['duration_hour']=final_df['Duration'].str.split(' ').str[0].str.split('h').str[0]

final_df.head()

final_df[final_df['duration_hour']=='5m']

final_df.drop(6474,axis=0,inplace=True)
final_df.drop(2660,axis=0,inplace=True)

final_df[final_df['duration_hour']=='5m']

final_df.info()

final_df['duration_hour'] = final_df['duration_hour'].astype('int')

final_df['duration_hour'] *60

final_df.info()

final_df.drop('Duration',axis=1,inplace=True)

final_df.head()

final_df['Airline'].unique()

from sklearn.preprocessing import LabelEncoder
labelencoder=LabelEncoder()

final_df['Airline']=labelencoder.fit_transform(final_df['Airline'])
final_df['Source']=labelencoder.fit_transform(final_df['Source'])
final_df['Destination']=labelencoder.fit_transform(final_df['Destination'])
final_df['Additional_Info']=labelencoder.fit_transform(final_df['Additional_Info'])

final_df.shape

final_df.head(2)

final_df[['Airline']]

from sklearn.preprocessing import OneHotEncoder
ohe = OneHotEncoder()

ohe.fit_transform(np.array(final_df['Airline']).reshape(-1,1))

#final_df['Airline']=ohe.fit_transform(final_df['Airline'])
#final_df['Source']=ohe.fit_transform(final_df['Source'])
#final_df['Destination']=ohe.fit_transform(final_df['Destination'])
#final_df['Additional_Info']=ohe.fit_transform(final_df['Additional_Info'])

final_df.head()

final_df.info()

pd.get_dummies(final_df,columns=["Airline", "Source", "Destination"] ,drop_first = True)

final_df['Additional_Info'].unique()

pd.get_dummies(final_df,columns=['Additional_Info'] ,drop_first = True)

final_df

final_df_dummies = pd.get_dummies(final_df,columns=["Airline", "Source", "Destination","Additional_Info"] ,drop_first = True)

final_df_dummies

final_df_dummies.shape

final_df_dummies.info()

final_df_dummies.isnull().sum()







































































































